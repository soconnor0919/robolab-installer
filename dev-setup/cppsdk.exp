#!/usr/bin/expect -f
#
# This Expect script was generated by autoexpect on Fri Jan 20 23:38:17 2023
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
spawn qibuild config --wizard
match_max 100000
expect -exact "Found CMake: /usr/bin/cmake\r
\[32;1m:: \[0mPlease choose a generator\[0m\r
   \[34;1m1 \[0mGreen Hills MULTI 	(default)\[0m\r
   \[34;1m2 \[0mUnix Makefiles\[0m\r
   \[34;1m3 \[0mNinja\[0m\r
   \[34;1m4 \[0mNinja Multi-Config\[0m\r
   \[34;1m5 \[0mWatcom WMake\[0m\r
   \[34;1m6 \[0mCodeBlocks - Ninja\[0m\r
   \[34;1m7 \[0mCodeBlocks - Unix Makefiles\[0m\r
   \[34;1m8 \[0mCodeLite - Ninja\[0m\r
   \[34;1m9 \[0mCodeLite - Unix Makefiles\[0m\r
   \[34;1m10 \[0mEclipse CDT4 - Ninja\[0m\r
   \[34;1m11 \[0mEclipse CDT4 - Unix Makefiles\[0m\r
   \[34;1m12 \[0mKate - Ninja\[0m\r
   \[34;1m13 \[0mKate - Unix Makefiles\[0m\r
   \[34;1m14 \[0mSublime Text 2 - Ninja\[0m\r
   \[34;1m15 \[0mSublime Text 2 - Unix Makefiles\[0m\r
\[32;1m> \[0m"
send -- "2\r"
expect -exact "2\r
\[32;1m:: \[0mPlease choose an IDE\[0m\r
   \[34;1m1 \[0mNone 	(default)\[0m\r
   \[34;1m2 \[0mQtCreator\[0m\r
   \[34;1m3 \[0mEclipse CDT\[0m\r
\[32;1m> \[0m"
send -- "1\r"
expect eof
